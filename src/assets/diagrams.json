{
  "meriseDiagrams": [
    {
      "id": 13,
      "name": "Diagramme entité-relation",
      "image": "assets/diagrams/merise/erd.png",
      "sourceImage": "https://www.lucidchart.com/pages/fr/diagramme-entite-association",
      "description": "MERISE - Identifie les entités du système, leurs attributs et les associations entre elles.",
      "uses": "→\u00A0Pour permettre de modéliser la structure des données et les associations entre les entités.→\u00A0Pour résoudre des problèmes de bases de données.",
      "method": "On utilise une série de symboles tels que des rectangles, losanges et ovales reliés par des lignes pour décrire les interconnexions entre les entités, leurs relations et leurs attributs. Les trois principaux types de relations (cardinalité)) sont un à un, un à plusieurs et plusieurs à plusieurs.",
      "source": "https://www.lucidchart.com/pages/fr/diagramme-entite-association"
    },
    {
      "id": 14,
      "name": "Diagramme des flux de données",
      "image": "assets/diagrams/merise/data-flow.png",
      "sourceImage": "https://www.lucidchart.com/pages/data-flow-diagram",
      "description": "MERISE - Montre les flux de données entre les processus du système.",
      "uses": "→\u00A0Pour modéliser le traitement des données à l'intérieur d'un système d'information.→\u00A0Pour identifier les flux de données (de sortie ou d'entrée).→\u00A0Montrer comment elles sont transformées à travers différents processus.",
      "method": "On utilise des symboles comme des rectangles, des cercles et des flèches, ainsi que de courtes étiquettes de texte, pour afficher les entrées de données, les sorties, les points de stockage et les itinéraires entre chaque destination.",
      "source": "https://www.lucidchart.com/pages/data-flow-diagram"
    },
    {
      "id": 15,
      "name": "Diagramme organisationnel ou de contexte",
      "image": "assets/diagrams/merise/context.jpg",
      "sourceImage": "https://www.lucidchart.com/pages/examples/context-diagram-software",
      "description": "MERISE - Montre la manière dont le système interagit avec son environnement. Il met en évidence les acteurs externes et les interfaces du système.",
      "uses": "→\u00A0Pour modéliser les interactions.→\u00A0Identifier les besoins, les attentes et les contraintes des acteurs externes.→\u00A0Délimiter le système (composants internes, acteurs externes).→\u00A0Planifier le développement.",
      "method": "On utilise pour les acteurs externes des boîtes ou des ellipses. Le système est au centre du diagramme, sous forme de boîte ou ellipse aussi. Les flux de données sont représentés par des flèches dirigées vers ou depuis le système, les flux de contrôle par des flèches ou des lignes pointillées. On peut ajouter des événements et des annotations.",
      "source": "https://ineumann.developpez.com/tutoriels/merise/initiation-merise/"
    },
    {
      "id": 16,
      "name": "Diagramme de flux de contrôle",
      "image": "assets/diagrams/merise/control-flow.jpeg",
      "sourceImage": "https://en.wikipedia.org/wiki/Control-flow_diagram",
      "description": "MERISE - Est utilisé pour représenter la logique de contrôle à l'intérieur du système. Il montre comment les processus sont déclenchés et comment les décisions sont prises.",
      "uses": "→\u00A0Pour représenter la manière dont les opérations et les actions sont organisées à l'intérieur d'un processus ou d'une fonction.→\u00A0Décomposer un processus ou une fonction en étapes ou en actions individuelles.→\u00A0Modéliser les décisions prises à l'intérieur d'un processus",
      "method": "Chaque étape est représentée par un symbole ou un rectangle, et les flèches indiquent la séquence dans laquelle ces étapes sont exécutées. Les décisions sont représentées par des losanges, avec des flèches de sortie conditionnelles.",
      "source": "https://ineumann.developpez.com/tutoriels/merise/initiation-merise/"
    },
    {
      "id": 17,
      "name": "Diagramme de flux physique",
      "image": "assets/diagrams/merise/physical-flow.jpg",
      "sourceImage": "https://www.lucidchart.com/pages/data-flow-diagram/logical-vs-physical-data-flow-diagram",
      "description": "MERISE - Décrit les détails techniques de la manière dont les données sont stockées et manipulées dans le système.",
      "uses": "→\u00A0Pour montrer comment les fichiers sont créés, lus, mis à jour et supprimés.→\u00A0Identifier les supports de stockage de données.→\u00A0Représenter l'architecture matérielle du système.→\u00A0Optimiser les performances en identifiant les goulots d'étranglement.",
      "method": "Il est recommandé de commencer par un diagramme de flux données logique. Pour chaque processus identifié, on en crée des correspondants physiques, soit les composants réels du système qui effectuent les opérations techniques.",
      "source": "https://ineumann.developpez.com/tutoriels/merise/initiation-merise/"
    }
  ],
  "umlDiagrams": [
    {
      "id": 1,
      "name": "Diagramme de cas d'utilisation",
      "image": "assets/diagrams/uml/compressed-uml/use-case.png",
      "sourceImage": "https://www.lucidchart.com/pages/fr/diagramme-de-cas-dutilisation-uml",
      "description": "UML - Représente les fonctionnalités du système ou de l'application du point de vue de l'utilisateur.",
      "uses": "→ Pour modéliser le flux de base des événements dans un cas d'utilisation →\u00A0Préciser le contexte et les exigences d'un sytème →\u00A0Définir les objectifs des interactions entre le système et les utilisateurs.",
      "method": "On retrouve les cas d'utilisation (formes ovales), les acteurs (personne, organisation ou système externe), les associations (lignes entre acteurs et cas d'utilisation), des paquets pour regrouper différents éléments, le scénario (actions et interactions entre acteurs et système), les objectifs.",
      "source": "https://www.lucidchart.com/pages/fr/diagramme-de-cas-dutilisation-uml"
    },
    {
      "id": 2,
      "name": "Diagramme de séquence",
      "image": "assets/diagrams/uml/compressed-uml/sequence.png",
      "sourceImage": "https://www.lucidchart.com/pages/fr/diagramme-de-sequence-uml",
      "description": "UML - Décrit comment et dans quel ordre plusieurs objets fonctionnent ensemble dans une séquence temporelle.",
      "uses": "→ Via un scénario d'utilisation du système →\u00A0Pour analyser la logique d'une fonction, d'une procédure ou d'un processus complexe",
      "method": "On utilise un symbole objet pour représenter une classe ou un objet, une boîte d'activation qui représentera le temps nécessaire pour une tâche plus ou moins longue, des symboles d'acteurs, de ligne de vie (le passage du temps). Les flèches représentent des symboles de messages asynchrones (retour, réponse et/ou création).",
      "source": "https://www.lucidchart.com/pages/fr/diagramme-de-sequence-uml"
    },
    {
      "id": 3,
      "name": "Diagramme de classes",
      "image": "assets/diagrams/uml/compressed-uml/class.png",
      "sourceImage": "https://www.lucidchart.com/pages/fr/diagramme-de-classes-uml",
      "description": "UML - Représente la structure statique du système avec des classes, des attributs et des méthodes.",
      "uses": "→\u00A0Pour illustrer des modèles de données.→\u00A0Pour fournir une description des schémas d'une application.",
      "method": "Il y a trois sections\u00A0: supérieure (nom de la classe), intermédiaire (attributs) et inférieure (opérations et méthodes).",
      "source": "https://www.lucidchart.com/pages/fr/diagramme-de-classes-uml"
    },
    {
      "id": 4,
      "name": "Diagramme d'objets",
      "image": "assets/diagrams/uml/compressed-uml/object.png",
      "sourceImage": "https://www.lucidchart.com/pages/fr/diagramme-dobjets-uml",
      "description": "UML - Montre une instance particulière d'une classe et les relations entre les objets.",
      "uses": "→\u00A0Pour obtenir une vue d'ensemble de ce qu'il y a à développer.",
      "method": "On retrouve les objets (instances d'une classe) représentés par des rectangles et reliés par des lignes, les titres de classe, des attributs de classe, des liens",
      "source": "https://www.lucidchart.com/pages/fr/diagramme-dobjets-uml"
    },
    {
      "id": 5,
      "name": "Diagramme d'états-transitions",
      "image": "assets/diagrams/uml/compressed-uml/state.png",
      "sourceImage": "https://www.lucidchart.com/pages/fr/diagramme-etats-transitions-uml",
      "description": "UML - Représente les différents états d'un objet et ses transitions entre ces états.",
      "uses": "→ Pour illustrer des cas d'utilisation liés à des événements. →\u00A0Pour décrire une progression.",
      "method": "Les états sont représentés par des rectangles aux coins arrondis, les transitions par des flèches entre des états.",
      "source": "https://www.lucidchart.com/pages/fr/diagramme-etats-transitions-uml"
    },
    {
      "id": 6,
      "name": "Diagramme d'activités",
      "image": "assets/diagrams/uml/compressed-uml/activity.png",
      "sourceImage": "https://www.lucidchart.com/pages/fr/diagramme-dactivite-uml",
      "description": "UML - Représente le flux des activités au sein d'un système, d'un processus ou d'un algorithme.",
      "uses": "→ Pour aider les intervenants à collaborer →\u00A0Pour modéliser les processus métier (optimisation de workflows, conception de nouveaux processus...). →\u00A0Modéliser le comportement d'un système logiciel. → Représenter le flux d'interaction d'un utilisateur avec une application (UX)...",
      "method": "On retrouve les actions (tâches des utilisateurs ou du logiciel -\u00A0rectangles arrondis), des noeuds de décision (losanges),  les flux de contrôle (des flèches reliant les activités) indiquant l'ordre dans lequel elles sont exécutées, un noeud de départ (cercle noir), un noeud de fin (cercle noir avec un contour.",
      "source": "https://www.lucidchart.com/pages/fr/diagramme-dactivite-uml"
    },
    {
      "id": 7,
      "name": "Diagramme de composants",
      "image": "assets/diagrams/uml/compressed-uml/component.png",
      "sourceImage": "https://www.lucidchart.com/pages/fr/diagramme-de-composants-uml",
      "description": "UML - Représente les composants logiciels et leurs relations.",
      "uses": "→\u00A0Pour imaginer la structure du système.→\u00A0Mettre en évidence les composants et leurs relations.",
      "method": "On retrouve des symboles de composant, de noeud, d'interface, de port, de paquetage, de dépendance.",
      "source": "https://www.lucidchart.com/pages/fr/diagramme-de-composants-uml"
    },
    {
      "id": 8,
      "name": "Diagramme de déploiement",
      "image": "assets/diagrams/uml/compressed-uml/deployment.png",
      "sourceImage": "https://www.lucidchart.com/pages/fr/diagramme-de-deploiement-uml",
      "description": "UML - Montre la disposition physique des composants matériels et logiciels sur un réseau.",
      "uses": "→\u00A0Pour visualiser la typologie du système matériel. →\u00A0Illustrer le traitement d'exécution.",
      "method": "On utilise plusieurs éléments\u00A0: l'artefact (le produit), l'association (ligne), le composant (élément logique), la dépendance (ligne fléchée en pointillés entre le lien de dépendance entre deux éléments), l'interface (cercle), le noeud (élément matériel ou logiciel), le noeud conteneur (qui en contient un autre), le stéréotype (contenu dans le noeud).",
      "source": "https://www.lucidchart.com/blog/fr/types-de-diagrammes-UML"
    },
    {
      "id": 9,
      "name": "Diagramme de paquetages",
      "image": "assets/diagrams/uml/compressed-uml/package.png",
      "sourceImage": "https://www.lucidchart.com/pages/fr/diagramme-package-uml",
      "description": "UML - Organise les éléments du modèle en paquetages.",
      "uses": "→\u00A0Pour représenter l'organisation et la disposition de divers éléments UML.→\u00A0Donner un aperçu visuel de l'architecture en couches d'un classifieur UML.",
      "method": "Il n'y a que deux symboles\u00A0: le package et l'interdépendance (flèche en pointillés).",
      "source": "https://www.lucidchart.com/pages/fr/diagramme-package-uml"
    },
    {
      "id": 10,
      "name": "Diagramme de communication",
      "image": "assets/diagrams/uml/compressed-uml/communication.png",
      "sourceImage": "https://www.lucidchart.com/pages/uml-communication-diagram",
      "description": "UML - Montre les objets qui interagissent les uns avec les autres, met l'accent sur les messages échangés.",
      "uses": "→\u00A0Pour modéliser la logique d'une procédure, d'une opération. →\u00A0Pour planifier et comprendre les fonctionnalités d'un scénario",
      "method": "Les symboles et notations utilisés sont les mêmes que pour les diagrammes de séquence.",
      "source": "https://www.lucidchart.com/pages/uml-communication-diagram"
    },
    {
      "id": 11,
      "name": "Diagramme d'aperçu des interactions",
      "image": "assets/diagrams/uml/compressed-uml/global-interaction.jpg",
      "sourceImage": "https://www.lucidchart.com/blog/fr/types-de-diagrammes-UML",
      "description": "UML - Combine des éléments de diagrammes de séquence et de diagrammes d'activité.",
      "uses": "→\u00A0Pour avoir un aperçu du flux de contrôle entre des noeuds en interaction.",
      "method": "On y inclut les noeuds initiaux, les noeuds finaux de flux, les noeuds finaux d'activité, les noeuds de décision, les noeuds de fusion, les noeuds de bifurcation et les noeuds de jonction.",
      "source": "https://www.lucidchart.com/blog/fr/types-de-diagrammes-UML"
    },
    {
      "id": 12,
      "name": "Diagramme de temps",
      "image": "assets/diagrams/uml/compressed-uml/timing.png",
      "sourceImage": "https://www.lucidchart.com/pages/uml-timing-diagram",
      "description": "UML - Représente le temps nécessaire pour exécuter une séquence d'opérations.",
      "uses": "→\u00A0Identifier les principales étapes pour terminer un processus",
      "method": "Un chronogramme, à considérer comme un diagramme de séquence inversé",
      "source": "https://www.lucidchart.com/pages/uml-timing-diagram"
    }
  ]
}
